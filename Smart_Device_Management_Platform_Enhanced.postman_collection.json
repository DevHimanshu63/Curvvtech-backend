{
  "info": {
    "name": "Smart Device Management Platform - Enhanced",
    "description": "Complete API collection for the enhanced Smart Device Management Platform with caching, real-time updates, and data export",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "accessToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "refreshToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "deviceId",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    },
    {
      "key": "jobId",
      "value": "",
      "type": "string"
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{accessToken}}",
        "type": "string"
      }
    ]
  },
  "item": [
    {
      "name": "System Health",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": ["{{baseUrl}}"],
              "path": ["health"]
            }
          }
        },
        {
          "name": "Metrics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/metrics",
              "host": ["{{baseUrl}}"],
              "path": ["metrics"]
            }
          }
        }
      ]
    },
    {
      "name": "Authentication",
      "item": [
        {
          "name": "User Signup",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test User\",\n  \"email\": \"test@example.com\",\n  \"password\": \"SecurePass123\",\n  \"role\": \"user\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/signup",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "signup"]
            }
          }
        },
        {
          "name": "User Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('accessToken', response.accessToken);",
                  "    pm.collectionVariables.set('refreshToken', response.refreshToken);",
                  "    pm.collectionVariables.set('userId', response.user.id);",
                  "    console.log('Tokens saved:', response.accessToken ? 'Access Token ✓' : '✗', response.refreshToken ? 'Refresh Token ✓' : '✗');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"SecurePass123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          }
        },
        {
          "name": "Refresh Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/refresh",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "refresh"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('accessToken', response.accessToken);",
                  "    pm.collectionVariables.set('refreshToken', response.refreshToken);",
                  "    console.log('Tokens refreshed successfully');",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Profile",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "profile"]
            }
          }
        },
        {
          "name": "Update Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Test User\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "profile"]
            }
          }
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"accessToken\": \"{{accessToken}}\",\n  \"refreshToken\": \"{{refreshToken}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/logout",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "logout"]
            }
          }
        },
        {
          "name": "Logout All Devices",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/auth/logout-all",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "logout-all"]
            }
          }
        }
      ]
    },
    {
      "name": "Device Management",
      "item": [
        {
          "name": "Create Device",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('deviceId', response.device.id);",
                  "    console.log('Device created with ID:', response.device.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Living Room Light\",\n  \"type\": \"light\",\n  \"status\": \"active\",\n  \"location\": \"Living Room\",\n  \"description\": \"Smart LED light for testing\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/devices",
              "host": ["{{baseUrl}}"],
              "path": ["devices"]
            }
          }
        },
        {
          "name": "Get Devices (Test Caching)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const cacheHeader = pm.response.headers.get('X-Cache');",
                  "const responseTime = pm.response.headers.get('X-Response-Time');",
                  "console.log('Cache Status:', cacheHeader || 'No cache header');",
                  "console.log('Response Time:', responseTime || 'No response time header');",
                  "if (cacheHeader === 'HIT') {",
                  "    console.log('✅ Cache HIT - Response served from cache');",
                  "} else if (cacheHeader === 'MISS') {",
                  "    console.log('❌ Cache MISS - Response served from database');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/devices",
              "host": ["{{baseUrl}}"],
              "path": ["devices"]
            }
          }
        },
        {
          "name": "Filter Devices",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/devices?type=light&status=active",
              "host": ["{{baseUrl}}"],
              "path": ["devices"],
              "query": [
                {
                  "key": "type",
                  "value": "light"
                },
                {
                  "key": "status",
                  "value": "active"
                }
              ]
            }
          }
        },
        {
          "name": "Update Device",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Living Room Light\",\n  \"status\": \"inactive\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/devices/{{deviceId}}",
              "host": ["{{baseUrl}}"],
              "path": ["devices", "{{deviceId}}"]
            }
          }
        },
        {
          "name": "Device Heartbeat",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"active\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/devices/{{deviceId}}/heartbeat",
              "host": ["{{baseUrl}}"],
              "path": ["devices", "{{deviceId}}", "heartbeat"]
            }
          }
        },
        {
          "name": "Delete Device",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/devices/{{deviceId}}",
              "host": ["{{baseUrl}}"],
              "path": ["devices", "{{deviceId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Logs & Analytics",
      "item": [
        {
          "name": "Create Log Entry",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"event\": \"units_consumed\",\n  \"value\": 2.5,\n  \"severity\": \"info\",\n  \"source\": \"device\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/devices/{{deviceId}}/logs",
              "host": ["{{baseUrl}}"],
              "path": ["devices", "{{deviceId}}", "logs"]
            }
          }
        },
        {
          "name": "Get Device Logs (Test Caching)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const cacheHeader = pm.response.headers.get('X-Cache');",
                  "console.log('Cache Status:', cacheHeader || 'No cache header');",
                  "if (cacheHeader === 'HIT') {",
                  "    console.log('✅ Cache HIT - Logs served from cache');",
                  "} else if (cacheHeader === 'MISS') {",
                  "    console.log('❌ Cache MISS - Logs served from database');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/devices/{{deviceId}}/logs?limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["devices", "{{deviceId}}", "logs"],
              "query": [
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Get Usage Analytics (Test Caching)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const cacheHeader = pm.response.headers.get('X-Cache');",
                  "console.log('Cache Status:', cacheHeader || 'No cache header');",
                  "if (cacheHeader === 'HIT') {",
                  "    console.log('✅ Cache HIT - Analytics served from cache');",
                  "} else if (cacheHeader === 'MISS') {",
                  "    console.log('❌ Cache MISS - Analytics calculated from database');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/devices/{{deviceId}}/usage?range=24h",
              "host": ["{{baseUrl}}"],
              "path": ["devices", "{{deviceId}}", "usage"],
              "query": [
                {
                  "key": "range",
                  "value": "24h"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Data Export",
      "item": [
        {
          "name": "Create Export Job",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 202) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('jobId', response.jobId);",
                  "    console.log('Export job created with ID:', response.jobId);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"device-logs-csv\",\n  \"options\": {\n    \"deviceId\": \"{{deviceId}}\",\n    \"startDate\": \"2024-01-01T00:00:00Z\",\n    \"endDate\": \"2024-12-31T23:59:59Z\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/exports/jobs",
              "host": ["{{baseUrl}}"],
              "path": ["exports", "jobs"]
            }
          }
        },
        {
          "name": "Check Export Job Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/exports/jobs/{{jobId}}",
              "host": ["{{baseUrl}}"],
              "path": ["exports", "jobs", "{{jobId}}"]
            }
          }
        },
        {
          "name": "Get Export History",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/exports/history",
              "host": ["{{baseUrl}}"],
              "path": ["exports", "history"]
            }
          }
        },
        {
          "name": "Download Export File",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/exports/download/{{filename}}",
              "host": ["{{baseUrl}}"],
              "path": ["exports", "download", "{{filename}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Security Testing",
      "item": [
        {
          "name": "Test Rate Limiting",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"wrongpassword\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          }
        },
        {
          "name": "Test Invalid Token",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer invalid-token"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/devices",
              "host": ["{{baseUrl}}"],
              "path": ["devices"]
            }
          }
        },
        {
          "name": "Test Invalid Input",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"\",\n  \"type\": \"invalid_type\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/devices",
              "host": ["{{baseUrl}}"],
              "path": ["devices"]
            }
          }
        }
      ]
    },
    {
      "name": "Performance Testing",
      "item": [
        {
          "name": "Test Response Time",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseTime = pm.response.responseTime;",
                  "console.log('Response Time:', responseTime + 'ms');",
                  "if (responseTime < 200) {",
                  "    console.log('✅ Good performance (<200ms)');",
                  "} else if (responseTime < 500) {",
                  "    console.log('⚠️ Acceptable performance (<500ms)');",
                  "} else {",
                  "    console.log('❌ Slow performance (>500ms)');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/devices",
              "host": ["{{baseUrl}}"],
              "path": ["devices"]
            }
          }
        },
        {
          "name": "Test Cache Performance",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseTime = pm.response.responseTime;",
                  "const cacheHeader = pm.response.headers.get('X-Cache');",
                  "console.log('Response Time:', responseTime + 'ms');",
                  "console.log('Cache Status:', cacheHeader || 'No cache header');",
                  "if (cacheHeader === 'HIT' && responseTime < 100) {",
                  "    console.log('✅ Excellent cache performance');",
                  "} else if (cacheHeader === 'HIT') {",
                  "    console.log('✅ Good cache performance');",
                  "} else {",
                  "    console.log('❌ Cache miss or slow response');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/devices",
              "host": ["{{baseUrl}}"],
              "path": ["devices"]
            }
          }
        }
      ]
    }
  ]
}
